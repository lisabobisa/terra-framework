(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{1022:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),o=l(n(2)),r=l(n(5)),i=l(n(1023));function l(e){return e&&e.__esModule?e:{default:e}}var u=r.default.bind(i.default),m={name:o.default.string.isRequired,src:o.default.string,url:o.default.string,version:o.default.string.isRequired},c=function(e){var t=e.src,n=e.name,o=e.url,r=e.version,i=a.default.createElement("a",{className:u("badge"),href:o||"https://www.npmjs.org/package/".concat(n,"/v/").concat(r)},a.default.createElement("span",{className:u("badge-name")},o?"package":"npm"),a.default.createElement("span",{className:u("badge-version")},"v".concat(r))),l=t?a.default.createElement("a",{className:u("badge"),href:t},a.default.createElement("span",{className:u("badge-name")},"github"),a.default.createElement("span",{className:u("badge-version")},"source")):void 0;return a.default.createElement("div",{className:u("badge-container")},i,l)};c.propTypes=m;var p=c;t.default=p},1023:function(e,t,n){e.exports={badge:"Badges-module__badge___3m7y2","badge-container":"Badges-module__badge-container___1YxI5","badge-name":"Badges-module__badge-name___BQ3u4","badge-version":"Badges-module__badge-version___3OgwS"}},1024:function(e,t,n){"use strict";function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var n={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var i=o?Object.getOwnPropertyDescriptor(e,r):null;i&&(i.get||i.set)?Object.defineProperty(n,r,i):n[r]=e[r]}n.default=e,t&&t.set(e,n);return n}(n(0)),r=p(n(2)),i=p(n(5)),l=n(136),u=p(n(1031)),m=p(n(363)),c=p(n(1032));function p(e){return e&&e.__esModule?e:{default:e}}function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function d(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,o=!1,r=void 0;try{for(var i,l=e[Symbol.iterator]();!(a=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);a=!0);}catch(e){o=!0,r=e}finally{try{a||null==l.return||l.return()}finally{if(o)throw r}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return f(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var v=i.default.bind(c.default),g={example:r.default.element,exampleSrc:r.default.element,title:r.default.string,description:r.default.node,isExpanded:r.default.bool},b=function(e){var t=e.example,n=e.exampleSrc,a=e.title,r=e.description,i=e.isExpanded,c=d((0,o.useState)(i),2),p=c[0],s=c[1],f=d((0,o.useState)(!1),2),g=f[0],b=f[1],h=o.default.useContext(l.ThemeContext);return o.default.createElement("div",{className:v("template",h.className)},o.default.createElement("div",{className:v("header")},a&&o.default.createElement("h2",{className:v("title")},a)),o.default.createElement("div",{className:v("content",{"dynamic-content":g})},r&&o.default.createElement("div",{className:v("description")},r),t),n&&o.default.createElement("div",{className:v("footer")},o.default.createElement("div",{className:v("button-container")},o.default.createElement("button",{type:"button",className:v("bg-toggle"),onClick:function(){return b(!g)}},"Toggle Background"),o.default.createElement("button",{type:"button",className:v("code-toggle"),onClick:function(){return s(!p)}},o.default.createElement(u.default,{className:v("chevron")}),o.default.createElement("span",null,"Code"),o.default.createElement(m.default,{className:v("chevron")}))),p&&o.default.createElement("div",{className:v("code")},n)))};b.propTypes=g,b.defaultProps={isExpanded:!1};var h=b;t.default=h},1031:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=r(n(0)),o=r(n(39));function r(e){return e&&e.__esModule?e:{default:e}}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var l=function(e){var t=i({},e);return a.default.createElement(o.default,t,a.default.createElement("path",{d:"M10.3 24L33.8 0l3.9 3.8L18 24l19.7 20.2-3.9 3.8z"}))};l.displayName="IconChevronLeft",l.defaultProps={className:"",viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg","data-name":"Layer 1",isBidi:!0};var u=l;t.default=u},1032:function(e,t,n){e.exports={"clinical-lowlight-theme":"ExampleTemplate-module__clinical-lowlight-theme___e4g6e","orion-fusion-theme":"ExampleTemplate-module__orion-fusion-theme___MlAIc",template:"ExampleTemplate-module__template___2Cn_e",header:"ExampleTemplate-module__header___1Uk65",content:"ExampleTemplate-module__content___2BfpO",description:"ExampleTemplate-module__description___17dwL",footer:"ExampleTemplate-module__footer___2qb8M","button-container":"ExampleTemplate-module__button-container___305lx",code:"ExampleTemplate-module__code____AmLF","bg-toggle":"ExampleTemplate-module__bg-toggle___3RP_x","code-toggle":"ExampleTemplate-module__code-toggle___25ONK",chevron:"ExampleTemplate-module__chevron___3Xlby",title:"ExampleTemplate-module__title___5hduh","dynamic-content":"ExampleTemplate-module__dynamic-content___1b8Fh"}},1147:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var a=n(0),o=n.n(a),r=n(1022),i=n.n(r),l=function(e){var t=e.url;return o.a.createElement(i.a,{src:"https://github.com/cerner/terra-framework/tree/main/packages/terra-navigation-prompt",name:"terra-navigation-prompt",version:"1.35.0",url:t})}},1671:function(e,t,n){"use strict";var a=n(13),o=n(6);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(n(86)),i=a(n(0)),l=o(n(2)),u=a(n(376)),m=function(e){var t=e.title,n=e.ariaLabel,a=(0,i.useState)(""),o=(0,r.default)(a,2),l=o[0],m=o[1];return i.default.createElement("div",null,i.default.createElement("p",null,t),l.length?i.default.createElement(u.default,{description:t}):void 0,i.default.createElement("input",{type:"text","aria-label":n,onChange:function(e){m(e.target.value)},value:l}),i.default.createElement("button",{type:"button",onClick:function(){m("")}},"Submit"))};m.propTypes={title:l.default.string,ariaLabel:l.default.string};var c=function(){var e=(0,i.useState)("Form 1"),t=(0,r.default)(e,2),n=t[0],a=t[1],o=(0,i.useState)([]),l=(0,r.default)(o,2),c=l[0],p=l[1];function s(e){a(e)}return i.default.createElement("div",null,i.default.createElement("h2",null,"Form Switcher"),i.default.createElement("p",null,"Custom logic has been implemented to prevent navigation altogether when NavigationPrompts are present."),i.default.createElement("button",{type:"button",disabled:"Form 1"===n||c.length,onClick:s.bind(null,"Form 1")},"Switch to Form 1"),i.default.createElement("button",{type:"button",disabled:"Form 2"===n||c.length,onClick:s.bind(null,"Form 2")},"Switch to Form 2"),i.default.createElement(u.NavigationPromptCheckpoint,{onPromptChange:function(e){p(e)}},i.default.createElement(m,{title:n,key:n,ariaLabel:n})))};t.default=c},2148:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return _}));var a=n(19),o=n.n(a),r=n(24),i=n.n(r),l=n(0),u=n.n(l),m=n(361),c=n(1147),p=n(1671),s=n.n(p),d={};function f(e){var t=e.components,n=i()(e,["components"]);return Object(m.mdx)("wrapper",o()({},d,n,{components:t,mdxType:"MDXLayout"}),Object(m.mdx)("pre",null,Object(m.mdx)("code",o()({parentName:"pre"},{className:"language-jsx"}),"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NavigationPrompt, { NavigationPromptCheckpoint } from 'terra-navigation-prompt';\n\nconst Form = ({ title, ariaLabel }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <div>\n      <p>{title}</p>\n      {inputValue.length ? <NavigationPrompt description={title} /> : undefined}\n      <input\n        type=\"text\"\n        aria-label={ariaLabel}\n        onChange={(event) => {\n          setInputValue(event.target.value);\n        }}\n        value={inputValue}\n      />\n      <button\n        type=\"button\"\n        onClick={() => {\n          setInputValue('');\n        }}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string,\n  ariaLabel: PropTypes.string,\n};\n\nconst FormSwitcher = () => {\n  const [activeForm, setActiveForm] = useState('Form 1');\n  const [activePrompts, setActivePrompts] = useState([]);\n\n  function onSwitchForm(formKey) {\n    setActiveForm(formKey);\n  }\n\n  return (\n    <div>\n      <h2>Form Switcher</h2>\n      <p>Custom logic has been implemented to prevent navigation altogether when NavigationPrompts are present.</p>\n      <button\n        type=\"button\"\n        disabled={activeForm === 'Form 1' || activePrompts.length}\n        onClick={onSwitchForm.bind(null, 'Form 1')}\n      >\n        Switch to Form 1\n      </button>\n      <button\n        type=\"button\"\n        disabled={activeForm === 'Form 2' || activePrompts.length}\n        onClick={onSwitchForm.bind(null, 'Form 2')}\n      >\n        Switch to Form 2\n      </button>\n      <NavigationPromptCheckpoint\n        onPromptChange={(prompts) => {\n          setActivePrompts(prompts);\n        }}\n      >\n        <Form title={activeForm} key={activeForm} ariaLabel={activeForm} />\n      </NavigationPromptCheckpoint>\n    </div>\n  );\n};\n\nexport default FormSwitcher;\n\n")))}f.isMDXComponent=!0;var v=n(1024),g=n.n(v),b=function(e){var t=e.title,n=e.description,a=e.isExpanded;return u.a.createElement(g.a,{title:t||"Implementation Guide Part 2",description:n,example:u.a.createElement(s.a,null),exampleSrc:u.a.createElement(f,null),isExpanded:a})},h={};function _(e){var t=e.components,n=i()(e,["components"]);return Object(m.mdx)("wrapper",o()({},h,n,{components:t,mdxType:"MDXLayout"}),Object(m.mdx)(c.a,{mdxType:"Badge"}),Object(m.mdx)("h1",{id:"terra-navigation-prompt---implementation-guide"},"Terra Navigation Prompt - Implementation Guide"),Object(m.mdx)("h2",{id:"part-3---implementing-a-custom-prompt-solution"},"Part 3 - Implementing a Custom Prompt Solution"),Object(m.mdx)("p",null,"At this point, we realize that we do not want to ",Object(m.mdx)("strong",{parentName:"p"},"ever")," allow users to navigate away from a Form with unsaved state. We can do that by using the NavigationPromptCheckpoint's ",Object(m.mdx)("inlineCode",{parentName:"p"},"onPromptChange")," prop."),Object(m.mdx)("pre",null,Object(m.mdx)("code",o()({parentName:"pre"},{className:"language-diff"}),"- import React, { useState, useRef } from 'react';\n+ import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NavigationPrompt, { NavigationPromptCheckpoint } from 'terra-navigation-prompt';\n\nconst Form = ({ title }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <div>\n      <p>{title}</p>\n      {inputValue.length ? <NavigationPrompt description={title} /> : undefined}\n      <input\n        type=\"text\"\n        onChange={(event) => {\n          setInputValue(event.target.value);\n        }}\n        value={inputValue}\n      />\n      <button\n        type=\"button\"\n        onClick={() => {\n          setInputValue('');\n        }}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nconst FormSwitcher = () => {\n  const [activeForm, setActiveForm] = useState('Form 1');\n+ const [activePrompts, setActivePrompts] = useState([]);\n\n  function onSwitchForm(formKey) {\n-   formCheckpointRef.current.resolvePrompts({\n-     title: 'Descriptive Notification Prompt Title',\n-     startMessage: 'Descriptive Notification Prompt Message',\n-     rejectButtonText: `Descriptive Reject Button Action`,\n-     acceptButtonText: 'Descriptive Accept Button Action',\n-     buttonOrder: 'acceptFirst',\n-   }).then(() => {\n      setActiveForm(formKey);\n-   });\n  }\n\n  return (\n    <div>\n      <h2>Form Switcher</h2>\n-     <p>The user will be prompted with the provided messaging when Forms are switched with unsaved changes present.</p>\n+     <p>Custom logic has been implemented to prevent navigation altogether when NavigationPrompts are present.</p>\n      <button\n        type=\"button\"\n-       disabled={activeForm === 'Form 1'}\n+       disabled={activeForm === 'Form 1' || activePrompts.length}\n        onClick={onSwitchForm.bind(null, 'Form 1')}\n      >\n        Switch to Form 1\n      </button>\n      <button\n        type=\"button\"\n-       disabled={activeForm === 'Form 2'}\n+       disabled={activeForm === 'Form 2' || activePrompts.length}\n        onClick={onSwitchForm.bind(null, 'Form 2')}\n      >\n        Switch to Form 2\n      </button>\n      <NavigationPromptCheckpoint\n-       ref={formCheckpointRef}\n+       onPromptChange={(prompts) => {\n+         setActivePrompts(prompts);\n+       }}\n      >\n        <Form title={activeForm} key={activeForm} />\n      </NavigationPromptCheckpoint>\n    </div>\n  );\n};\n")),Object(m.mdx)("p",null,"We remove the ",Object(m.mdx)("inlineCode",{parentName:"p"},"ref")," from the NavigationPromptCheckpoint and instead implement ",Object(m.mdx)("inlineCode",{parentName:"p"},"onPromptChange")," to store the currently rendered NavigationPrompt's in the FormSwitcher's state. We disable the 'Switch to' buttons altogether if a NavigationPrompt is detected. We could also use this state to control other navigation-capable components, like client-side routers."),Object(m.mdx)("h2",{id:"examples"},"Examples"),Object(m.mdx)(b,{title:"Part 2 - Implementing a Custom Prompt Handler",mdxType:"ImplementationGuidePart2"}))}_.isMDXComponent=!0}}]);
//# sourceMappingURL=153-2b78358b4847dd80df71.js.map